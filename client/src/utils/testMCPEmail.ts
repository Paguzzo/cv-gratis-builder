import MCPEmailService from '@/services/mcpEmailService';

/**
 * Utilit√°rio para testar o sistema de email MCP integrado ao CV Gr√°tis
 */
export class MCPEmailTester {
  
  /**
   * Teste b√°sico de conectividade
   */
  static async testBasicConnectivity(): Promise<void> {
    console.log('üß™ Iniciando teste b√°sico do sistema MCP Email...');
    
    try {
      const result = await MCPEmailService.testEmailConfiguration();
      
      if (result.success) {
        console.log('‚úÖ TESTE B√ÅSICO APROVADO:', result.details);
      } else {
        console.error('‚ùå TESTE B√ÅSICO FALHOU:', result.details);
      }
    } catch (error) {
      console.error('üí• ERRO NO TESTE B√ÅSICO:', error);
    }
  }

  /**
   * Teste de envio de curr√≠culo completo
   */
  static async testCurriculumSending(): Promise<void> {
    console.log('üß™ Testando envio completo de curr√≠culo...');
    
    try {
      const testData = {
        recipientEmail: 'compg.oficial@gmail.com',
        recipientName: 'Teste Recebedor',
        senderName: 'Jo√£o Silva Teste',
        subject: 'üß™ TESTE - Meu Curr√≠culo Via MCP',
        message: 'Ol√°!\n\nEste √© um teste do sistema de envio de curr√≠culos integrado com MCP + Resend.\n\nSe voc√™ recebeu este email, o sistema est√° funcionando corretamente!\n\nAtenciosamente,\nJo√£o Silva',
        templateId: 'test-template-001'
      };

      const result = await MCPEmailService.sendCurriculumByEmail(testData);
      
      if (result.success) {
        console.log('‚úÖ TESTE DE CURR√çCULO APROVADO:', result.emailId);
      } else {
        console.error('‚ùå TESTE DE CURR√çCULO FALHOU:', result.error);
      }
    } catch (error) {
      console.error('üí• ERRO NO TESTE DE CURR√çCULO:', error);
    }
  }

  /**
   * Executar bateria completa de testes
   */
  static async runAllTests(): Promise<void> {
    console.log('üöÄ INICIANDO BATERIA COMPLETA DE TESTES MCP EMAIL');
    console.log('================================================');
    
    // Teste 1: Conectividade b√°sica
    await this.testBasicConnectivity();
    
    // Aguardar um pouco entre testes
    await new Promise(resolve => setTimeout(resolve, 2000));
    
    // Teste 2: Envio de curr√≠culo
    await this.testCurriculumSending();
    
    console.log('================================================');
    console.log('üèÅ BATERIA DE TESTES CONCLU√çDA');
  }

  /**
   * Verificar configura√ß√£o do ambiente
   */
  static checkEnvironment(): void {
    console.log('üîç Verificando ambiente para MCP Email...');
    
         const checks = [
       {
         name: 'Browser Environment',
         condition: typeof window !== 'undefined',
         message: 'Executando no browser'
       },
       {
         name: 'MCP Email Function',
         condition: typeof window?.mcp_Email_sending_send_email === 'function',
         message: 'Fun√ß√£o MCP Email dispon√≠vel'
       },
       {
         name: 'Template Premium',
         condition: !!document.querySelector('.template-premium-preview'),
         message: 'Template premium detectado'
       },
       {
         name: 'Template Gratuito',
         condition: !!document.getElementById('template-preview-container'),
         message: 'Template gratuito detectado'
       },
       {
         name: 'Algum Template',
         condition: !!(document.querySelector('.template-premium-preview') || 
                      document.getElementById('template-preview-container') ||
                      document.querySelector('[class*="template"]')),
         message: 'Sistema de templates dispon√≠vel'
       }
     ];

    checks.forEach(check => {
      const status = check.condition ? '‚úÖ' : '‚ùå';
      console.log(`${status} ${check.name}: ${check.message}`);
    });
  }
}

// Fun√ß√£o utilit√°ria para executar teste r√°pido no console
export const testMCPEmailQuick = async () => {
  MCPEmailTester.checkEnvironment();
  await MCPEmailTester.runAllTests();
};

// Para usar no console do navegador:
// import { testMCPEmailQuick } from './utils/testMCPEmail';
// testMCPEmailQuick(); 